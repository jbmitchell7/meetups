{"version":3,"sources":["components/Event/Event.js","components/EventList/EventList.js","components/CitySearch/CitySearch.js","components/NumberOfEvents/NumberOfEvents.js","mock-data.js","api.js","components/app/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleToggleDetails","setState","event","this","props","Card","Body","className","Title","summary","Text","location","start","dateTime","end","Button","variant","id","onClick","description","Component","EventList","events","map","Col","lg","md","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","numberOfEvents","type","onChange","onFocus","style","display","NumberOfEvents","updateCount","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","data","localStorage","setItem","JSON","stringify","getToken","code","encodeCode","encodeURIComponent","access_token","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","currentLocation","count","locationEvents","slice","mounted","Row","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Container","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.fed37c58.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\n\nimport './Event.css';\n\nclass Event extends Component {\n    state = {\n        collapsed: true,\n    }\n\n    handleToggleDetails = () => {\n        const { collapsed } = this.state;\n        this.setState({\n            collapsed: !collapsed,\n        });\n    }\n\n    render() {\n        const { event } = this.props;\n        const { collapsed } = this.state;\n        return (\n            <Card.Body className=\"event\">\n                <Card.Title className=\"event-summary\">{event.summary}</Card.Title>\n                <Card.Text className=\"event-location\">{event.location}</Card.Text>\n                <Card.Text className=\"event-start\">{event.start.dateTime}</Card.Text>\n                <Card.Text className=\"event-end\">{event.end.dateTime}</Card.Text>\n                <Button variant=\"primary\" id=\"toggle-details\" onClick={this.handleToggleDetails}>Show/Hide Details</Button>\n\n                {!collapsed && (\n                    <Card.Text className=\"event-details\">\n                        <div className=\"event-description\">{event.description}</div>\n                    </Card.Text>\n                )}\n            </Card.Body>\n        )\n    }\n}\nexport default Event;","import React, { Component } from 'react';\nimport { Col } from 'react-bootstrap';\n\nimport Event from '../Event/Event';\nimport './EventList.css'\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n            <>\n                {events.map(event =>\n                    <Col lg={4} md={6} key={event.id}>\n                        <Event event={event} />\n                    </Col>\n                )}\n            </>\n        );\n    }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nimport './CitySearch.css';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n            query: value,\n            suggestions,\n        });\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(suggestion, this.props.numberOfEvents);\n    };\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <input\n                    type=\"text\"\n                    className=\"city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\n                />\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n                    {this.state.suggestions.map((suggestion) => (\n                        <li\n                            key={suggestion}\n                            onClick={() => this.handleItemClicked(suggestion)}\n                        >{suggestion}</li>\n                    ))}\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\n                        <b>See all cities</b>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nimport './NumberOfEvents.css';\n\nclass NumberOfEvents extends Component {\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.props.updateCount(value);\n    };\n\n    render() {\n        const { numberOfEvents } = this.props;\n        return (\n            <div className=\"total-events-viewed\">\n                <input\n                    type=\"text\"\n                    className=\"numbers\"\n                    value={numberOfEvents}\n                    onChange={this.handleInputChanged}\n                />\n            </div>\n        );\n    }\n}\n\nexport default NumberOfEvents;","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    }\n];\n\nexport { mockData };","import axios from 'axios';\nimport NProgress from 'nprogress';\nimport { mockData } from './mock-data';\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n    return result;\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nexport const getEvents = async () => {\n\n    NProgress.start();\n\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        return mockData;\n    }\n\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = `https://gu61ufjbbl.execute-api.us-east-2.amazonaws.com/dev/api/get-events/${token}`;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        `https://gu61ufjbbl.execute-api.us-east-2.amazonaws.com/dev/api/token/${encodeCode}`\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://gu61ufjbbl.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}","import React, { Component } from 'react';\nimport { Row } from 'react-bootstrap';\n\nimport '../../nprogress.css';\nimport './App.css';\nimport EventList from '../EventList/EventList';\nimport CitySearch from '../CitySearch/CitySearch';\nimport NumberOfEvents from '../NumberOfEvents/NumberOfEvents';\nimport { extractLocations, getEvents } from '../../api';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: 'all'\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location, count) => {\n    getEvents().then((events) => {\n      let locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      locationEvents = locationEvents.slice(0, count);\n      this.setState({\n        events: locationEvents,\n      });\n    });\n  }\n\n  updateCount = (count) => {\n    this.setState({\n      numberOfEvents: count\n    });\n    const { currentLocation } = this.state;\n    this.updateEvents(currentLocation, count);\n  }\n\n  render() {\n    return (\n      <Row className=\"app\">\n        <CitySearch locations={this.state.locations} numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} />\n        <NumberOfEvents updateCount={this.updateCount} numberOfEvents={this.state.numberOfEvents} />\n        <EventList events={this.state.events.slice(0, this.state.numberOfEvents)} />\n      </Row>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Container } from 'react-bootstrap';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <App />\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}